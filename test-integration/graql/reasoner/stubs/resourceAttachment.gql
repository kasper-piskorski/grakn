define

someRole sub role;
otherRole sub role;

genericEntity sub entity,
    plays someRole,
    plays otherRole,
    has reattachable-resource-string,
    has subResource,
    has resource-long,
    has derived-resource-boolean;

anotherEntity sub entity,
    has resource-long,
    has derived-resource-boolean;

yetAnotherEntity sub entity,
    has derived-resource-string;

relation0 sub relation,
    relates someRole,
    relates otherRole,
    has reattachable-resource-string;

#Resources
derivable-resource-string sub attribute, datatype string;
reattachable-resource-string sub derivable-resource-string, datatype string;
derived-resource-string sub derivable-resource-string, datatype string;
resource-long sub attribute, datatype long;
derived-resource-boolean sub attribute, datatype boolean;
subResource sub reattachable-resource-string;

#Rules


attachUnattachedResourceToEntity sub rule,
    when {
        $x isa derived-resource-string;
        $x == 'unattached';
        $y isa yetAnotherEntity;
    },
    then {
        $y has derived-resource-string 'unattached';
    };



insert

#Data

$geX isa genericEntity, has reattachable-resource-string "value";
$geY isa genericEntity;
(someRole:$geX, otherRole:$geX) isa relation0;

$se isa anotherEntity, has resource-long 1;
$aeX isa yetAnotherEntity;
$aeY isa yetAnotherEntity;

$r "unattached" isa derived-resource-string;