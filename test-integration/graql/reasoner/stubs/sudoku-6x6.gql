define


number sub entity,
    plays pos1, plays pos2, plays pos3, plays pos4, plays pos5, plays pos6,
    plays pos11, plays pos12, plays pos13, plays pos14, plays pos15, plays pos16,
    plays pos21, plays pos22, plays pos23, plays pos24, plays pos25, plays pos26,
    plays pos31, plays pos32, plays pos33, plays pos34, plays pos35, plays pos36,
    plays pos41, plays pos42, plays pos43, plays pos44, plays pos45, plays pos46,
    plays pos51, plays pos52, plays pos53, plays pos54, plays pos55, plays pos56,
    plays pos61, plays pos62, plays pos63, plays pos64, plays pos65, plays pos66,
    has value;

value sub attribute, datatype long;

row sub relation,
    relates pos1, relates pos2, relates pos3, relates pos4, relates pos5, relates pos6,
    has is-invalid;

column sub relation,
    relates pos1, relates pos2, relates pos3, relates pos4, relates pos5, relates pos6,
    has is-invalid;

is-invalid sub attribute, datatype boolean;

solution sub relation,
    relates pos11, relates pos12, relates pos13, relates pos14, relates pos15, relates pos16,
    relates pos21, relates pos22, relates pos23, relates pos24, relates pos25, relates pos26,
    relates pos31, relates pos32, relates pos33, relates pos34, relates pos35, relates pos36,
    relates pos41, relates pos42, relates pos43, relates pos44, relates pos45, relates pos46,
    relates pos51, relates pos52, relates pos53, relates pos54, relates pos55, relates pos56,
    relates pos61, relates pos62, relates pos63, relates pos64, relates pos65, relates pos66;

row-rule sub rule,
when {
    $x isa number, has value $v1;
    $y isa number, has value $v2;
    $z isa number, has value $v3;
    $u isa number, has value $v4;
    $v isa number, has value $v5;
    $q isa number, has value $v6;
    $v1 != $v2;
    $v1 != $v3;
    $v1 != $v4;
    $v1 != $v5;
    $v1 != $v6;

    $v2 != $v3;
    $v2 != $v4;
    $v2 != $v5;
    $v2 != $v6;

    $v3 != $v4;
    $v3 != $v5;
    $v3 != $v6;

    $v4 != $v5;
    $v4 != $v6;

    $v5 != $v6;
}, then {
    (pos1: $x, pos2: $y, pos3: $z, pos4: $u, pos5: $v, pos6: $q) isa row;
};

invalid-row-rule sub rule,
when {
    $r ($x, $y) isa row;
    $x has value $v;
    $y has value $v;
    $x != $y;
}, then {
    $r has is-invalid true;
};

column-rule sub rule,
when {
    $x isa number, has value $v1;
    $y isa number, has value $v2;
    $z isa number, has value $v3;
    $u isa number, has value $v4;
    $v isa number, has value $v5;
    $q isa number, has value $v6;
    $v1 != $v2;
    $v1 != $v3;
    $v1 != $v4;
    $v1 != $v5;
    $v1 != $v6;

    $v2 != $v3;
    $v2 != $v4;
    $v2 != $v5;
    $v2 != $v6;

    $v3 != $v4;
    $v3 != $v5;
    $v3 != $v6;

    $v4 != $v5;
    $v4 != $v6;

    $v5 != $v6;
}, then {
    (pos1: $x, pos2: $y, pos3: $z, pos4: $u, pos5: $v, pos6: $q) isa column;
};

invalid-column-rule sub rule,
when {
    $r ($x, $y) isa column;
    $x has value $v;
    $y has value $v;
    $x != $y;
}, then {
    $r has is-invalid true;
};

solution-rule sub rule,
when {
    $r1 (pos1: $x1, pos2: $y1, pos3: $z1, pos4: $u1, pos5: $v1, pos6: $q1) isa row;
    $r2 (pos1: $x2, pos2: $y2, pos3: $z2, pos4: $u2, pos5: $v2, pos6: $q2) isa row;
    $r3 (pos1: $x3, pos2: $y3, pos3: $z3, pos4: $u3, pos5: $v3, pos6: $q3) isa row;
    $r4 (pos1: $x4, pos2: $y4, pos3: $z4, pos4: $u4, pos5: $v4, pos6: $q4) isa row;
    $r5 (pos1: $x5, pos2: $y5, pos3: $z5, pos4: $u5, pos5: $v5, pos6: $q5) isa row;
    $r6 (pos1: $x6, pos2: $y6, pos3: $z6, pos4: $u6, pos5: $v6, pos6: $q6) isa row;

    $c1 (pos1: $x1, pos2: $x2, pos3: $x3, pos4: $x4, pos5: $x5, pos6: $x6) isa column;
    $c2 (pos1: $y1, pos2: $y2, pos3: $y3, pos4: $y4, pos5: $y5, pos6: $y6) isa column;
    $c3 (pos1: $z1, pos2: $z2, pos3: $z3, pos4: $z4, pos5: $z5, pos6: $z6) isa column;
    $c4 (pos1: $u1, pos2: $u2, pos3: $u3, pos4: $u4, pos5: $u5, pos6: $u6) isa column;
    $c5 (pos1: $v1, pos2: $v2, pos3: $v3, pos4: $v4, pos5: $v5, pos6: $v6) isa column;
    $c6 (pos1: $q1, pos2: $q2, pos3: $q3, pos4: $q4, pos5: $q5, pos6: $q6) isa column;
    not{ $r1 has is-invalid true; };
    not{ $r2 has is-invalid true; };
    not{ $r3 has is-invalid true; };
    not{ $r4 has is-invalid true; };
    not{ $r5 has is-invalid true; };
    not{ $r6 has is-invalid true; };
    not{ $c1 has is-invalid true; };
    not{ $c2 has is-invalid true; };
    not{ $c3 has is-invalid true; };
    not{ $c4 has is-invalid true; };
    not{ $c5 has is-invalid true; };
    not{ $c6 has is-invalid true; };
}, then {
    (
    pos11: $x1, pos12: $y1, pos13: $z1, pos14: $u1, pos15: $v1, pos16: $q1,
    pos21: $x2, pos22: $y2, pos23: $z2, pos24: $u2, pos25: $v2, pos26: $q2,
    pos31: $x3, pos32: $y3, pos33: $z3, pos34: $u3, pos35: $v3, pos36: $q3,
    pos41: $x4, pos42: $y4, pos43: $z4, pos44: $u4, pos45: $v4, pos46: $q4,
    pos51: $x5, pos52: $y5, pos53: $z5, pos54: $u5, pos55: $v5, pos56: $q5,
    pos61: $x6, pos62: $y6, pos63: $z6, pos64: $u6, pos65: $v6, pos66: $q6
    ) isa solution;
};


insert
$x1 isa number, has value 1;
$y1 isa number, has value 2;
$z1 isa number, has value 3;
$u1 isa number, has value 4;
$v1 isa number, has value 5;
$q1 isa number, has value 6;
